{"version":3,"sources":["pages/login/logo.svg","themes/default.ts","themes/index.ts","config.ts","context/UserContext.tsx","pages/error/styles.ts","pages/error/Error.tsx","pages/login/styles.ts","pages/login/Login.tsx","components/Header/styles.ts","components/Header/Header.tsx","components/Sidebar/styles.ts","components/Sidebar/Sidebar.tsx","pages/wholesale/InputDialog.tsx","pages/wholesale/styles.tsx","pages/wholesale/WholesaleContract.tsx","pages/retail/InputDialog.tsx","pages/retail/styles.tsx","pages/retail/EFContract.tsx","pages/fundingrequest/InputDialog.tsx","pages/fundingrequest/styles.tsx","pages/fundingrequest/FundingRequest.tsx","pages/fundingapproval/styles.tsx","pages/fundingapproval/FundingApproval.tsx","components/Layout/styles.ts","components/Layout/Layout.tsx","components/App.tsx","index.tsx"],"names":["module","exports","palette","primary","main","light","tinycolor","lighten","toHexString","dark","darken","secondary","contrastText","warning","success","info","text","hint","background","default","customShadows","widget","widgetDark","widgetWide","createMuiTheme","defaultTheme","typography","h1","fontSize","h2","h3","h4","h5","h6","host","window","location","split","ledgerId","apiUrl","slice","unshift","httpBaseUrl","join","port","loginUrl","dablLoginUrl","UserStateContext","React","createContext","isAuthenticated","UserDispatchContext","userReducer","state","action","type","token","party","UserProvider","children","localStorage","getItem","applicationId","initState","useReducer","dispatch","Provider","value","useUserState","context","useContext","undefined","Error","useUserDispatch","loginUser","userToken","history","setIsLoading","setError","jwt","admin","actAs","readAs","createToken","setItem","push","loginDablUser","assign","makeStyles","theme","createStyles","container","height","width","display","flexDirection","justifyContent","alignItems","position","top","left","paperRoot","paddingTop","spacing","paddingBottom","paddingLeft","paddingRight","maxWidth","errorCode","marginBottom","fontWeight","safetyText","color","textAlign","backButton","textTransform","classes","useStyles","Grid","className","Paper","root","Typography","variant","Button","component","Link","to","size","logotypeContainer","backgroundColor","logotypeImage","logotypeText","formContainer","form","tab","dablLoginButton","errorMessage","textFieldUnderline","borderBottomColor","textField","formButtons","marginTop","loginLoader","marginLeft","withRouter","props","userDispatch","useState","isLoading","error","loginValue","setLoginValue","passwordValue","setPasswordValue","src","logo","alt","Fragment","Fade","in","onClick","TextField","id","InputProps","underline","input","onChange","e","target","onKeyDown","key","margin","placeholder","fullWidth","CircularProgress","disabled","length","logotype","marginRight","whiteSpace","appBar","zIndex","drawer","toolbar","grow","flexGrow","headerMenuButton","padding","headerIcon","userState","AppBar","Toolbar","IconButton","aria-haspopup","aria-controls","event","removeItem","signOut","flexShrink","mixins","linkRoot","link","textDecoration","linkActive","linkIcon","linkIconActive","linkText","linkTextActive","SidebarLink","path","icon","label","active","pathname","indexOf","ListItem","button","disableRipple","ListItemIcon","ListItemText","Drawer","open","paper","List","style","InputDialog","defaultValue","setState","fieldsAsArray","Object","entries","fields","Dialog","onClose","DialogTitle","title","DialogContent","map","index","fieldName","field","FormControl","InputLabel","required","Select","items","item","MenuItem","autoFocus","InputLabelProps","shrink","fieldsToInput","DialogActions","tableCell","verticalAlign","tableCellButton","tableRow","choiceButton","WholesaleContractList","assets","useStreamQueries","EF","WholesaleContract","contracts","useParty","ledger","useLedger","defaultNewAssetProps","Date","toISOString","originator","dealer","eftype","startDate","endDate","duration","amount","rate","assetType","vin","closingContract","status","a","newAssetProps","setNewAssetProps","Container","wholesaleData","create","showNewAsset","Table","TableHead","TableRow","TableCell","TableBody","contractId","payload","EFContractList","retailcontracts","EFContract","business","startdate","businessCreditScore","dealerCommission","defaultRequestProps","newLessor","newFee","newFundingContractId","requestProps","setRequestProps","efData","r","asset","exercise","FundingRequest","showRequest","FundingRequestList","FundingContractRequest","ContractId","defaultApprovalProps","newFundingDate","newDealerCommission","selectedlessor","newFundingRequestId","approvalProps","setApprovalProps","lessor","originationFee","fundingContract","FundingApproval","showApproval","FundingApprovalList","FundingContractApproval","fundingDate","fundingRequestId","fundingRequest","overflowX","content","minHeight","fakeToolbar","user","wsBaseUrl","WholeSaleContractList","App","exact","useEffect","url","URL","toString","searchParams","get","render","PrivateRoute","Layout","PublicRoute","Login","ErrorComponent","rest","createElement","from","ReactDOM","ThemeProvider","Themes","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.80e9d1b5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.4ac65da8.svg\";","import tinycolor from \"tinycolor2\";\r\n\r\nconst primary = \"#536DFE\";\r\nconst secondary = \"#FF5C93\";\r\nconst warning = \"#FFC260\";\r\nconst success = \"#3CD4A0\";\r\nconst info = \"#9013FE\";\r\n\r\nconst lightenRate = 7.5;\r\nconst darkenRate = 15;\r\n\r\nexport default {\r\n  palette: {\r\n    primary: {\r\n      main: primary,\r\n      light: tinycolor(primary)\r\n        .lighten(lightenRate)\r\n        .toHexString(),\r\n      dark: tinycolor(primary)\r\n        .darken(darkenRate)\r\n        .toHexString(),\r\n    },\r\n    secondary: {\r\n      main: secondary,\r\n      light: tinycolor(secondary)\r\n        .lighten(lightenRate)\r\n        .toHexString(),\r\n      dark: tinycolor(secondary)\r\n        .darken(darkenRate)\r\n        .toHexString(),\r\n      contrastText: \"#FFFFFF\",\r\n    },\r\n    warning: {\r\n      main: warning,\r\n      light: tinycolor(warning)\r\n        .lighten(lightenRate)\r\n        .toHexString(),\r\n      dark: tinycolor(warning)\r\n        .darken(darkenRate)\r\n        .toHexString(),\r\n    },\r\n    success: {\r\n      main: success,\r\n      light: tinycolor(success)\r\n        .lighten(lightenRate)\r\n        .toHexString(),\r\n      dark: tinycolor(success)\r\n        .darken(darkenRate)\r\n        .toHexString(),\r\n    },\r\n    info: {\r\n      main: info,\r\n      light: tinycolor(info)\r\n        .lighten(lightenRate)\r\n        .toHexString(),\r\n      dark: tinycolor(info)\r\n        .darken(darkenRate)\r\n        .toHexString(),\r\n    },\r\n    text: {\r\n      primary: \"#4A4A4A\",\r\n      secondary: \"#6E6E6E\",\r\n      hint: \"#B9B9B9\",\r\n    },\r\n    background: {\r\n      default: \"#F6F7FF\",\r\n      light: \"#F3F5FF\",\r\n    },\r\n  },\r\n  customShadows: {\r\n    widget:\r\n      \"0px 3px 11px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\r\n    widgetDark:\r\n      \"0px 3px 18px 0px #4558A3B3, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\r\n    widgetWide:\r\n      \"0px 12px 33px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\r\n  },\r\n};","import defaultTheme from \"./default\";\r\n\r\nimport { createMuiTheme } from \"@material-ui/core\";\r\n\r\nconst overrides = {\r\n  typography: {\r\n    h1: {\r\n      fontSize: \"3rem\",\r\n    },\r\n    h2: {\r\n      fontSize: \"2rem\",\r\n    },\r\n    h3: {\r\n      fontSize: \"1.64rem\",\r\n    },\r\n    h4: {\r\n      fontSize: \"1.5rem\",\r\n    },\r\n    h5: {\r\n      fontSize: \"1.285rem\",\r\n    },\r\n    h6: {\r\n      fontSize: \"1.142rem\",\r\n    },\r\n  },\r\n};\r\n\r\nexport default {\r\n  default: createMuiTheme({ ...defaultTheme, ...overrides }),\r\n};\r\n\r\n","import * as jwt from \"jsonwebtoken\";\n\nexport const isLocalDev = process.env.NODE_ENV === 'development';\n\nlet host = window.location.host.split('.')\n\nconst applicationId = 'ef-app'\nexport const ledgerId = isLocalDev ? applicationId : host[0];\n\nlet apiUrl = host.slice(1)\napiUrl.unshift('api')\n\nexport const httpBaseUrl = isLocalDev ? undefined : ('https://' + apiUrl.join('.') + (window.location.port ? ':' + window.location.port : '') + '/data/' + ledgerId + '/');\n\n// Unfortunately, the development server of `create-react-app` does not proxy\n// websockets properly. Thus, we need to bypass it and talk to the JSON API\n// directly in development mode.\nexport const wsBaseUrl = isLocalDev ? 'ws://localhost:7575/' : undefined;\n\nexport const createToken = (party : string) => jwt.sign({ \"https://daml.com/ledger-api\": { ledgerId, applicationId, admin: true, actAs: [party], readAs: [party] } }, \"secret\")\n\nlet loginUrl = host.slice(1)\nloginUrl.unshift('login')\n\nexport const dablLoginUrl = loginUrl.join('.') + (window.location.port ? ':' + window.location.port : '') + '/auth/login?ledgerId=' + ledgerId;\n\nexport const damlPartyKey = applicationId + \".daml.party\";\nexport const damlTokenKey = applicationId + \".daml.token\";\n","import React from \"react\";\r\nimport { History } from 'history';\r\nimport { createToken, dablLoginUrl, damlPartyKey, damlTokenKey } from \"../config\";\r\n\r\ntype AuthenticatedUser = {\r\n  isAuthenticated : true\r\n  token : string\r\n  party : string\r\n}\r\n\r\ntype UnAthenticated = {\r\n  isAuthenticated : false\r\n}\r\n\r\ntype UserState = UnAthenticated | AuthenticatedUser\r\n\r\ntype LoginSuccess = {\r\n  type : \"LOGIN_SUCCESS\"\r\n  token : string\r\n  party : string\r\n}\r\n\r\ntype LoginFailure = {\r\n  type : \"LOGIN_FAILURE\"\r\n}\r\n\r\ntype SignoutSuccess = {\r\n  type : \"SIGN_OUT_SUCCESS\"\r\n}\r\n\r\ntype LoginAction = LoginSuccess | LoginFailure | SignoutSuccess\r\n\r\nconst UserStateContext = React.createContext<UserState>({ isAuthenticated: false });\r\nconst UserDispatchContext = React.createContext<React.Dispatch<LoginAction>>({} as React.Dispatch<LoginAction>);\r\n\r\nfunction userReducer(state : UserState, action : LoginAction) : UserState {\r\n  switch (action.type) {\r\n    case \"LOGIN_SUCCESS\":\r\n      return { isAuthenticated: true, token: action.token, party: action.party };\r\n    case \"LOGIN_FAILURE\":\r\n      return { isAuthenticated: false };\r\n    case \"SIGN_OUT_SUCCESS\":\r\n      return { isAuthenticated: false };\r\n  }\r\n}\r\n\r\nconst UserProvider : React.FC = ({ children }) => {\r\n  const party = localStorage.getItem(damlPartyKey);\r\n  const token = localStorage.getItem(damlTokenKey);\r\n\r\n  let initState : UserState = (!!party && !!token) ? { isAuthenticated : true, token, party } : { isAuthenticated : false };\r\n  const [state, dispatch] = React.useReducer<React.Reducer<UserState,LoginAction>>(userReducer, initState);\r\n\r\n  return (\r\n    <UserStateContext.Provider value={state}>\r\n      <UserDispatchContext.Provider value={dispatch}>\r\n        {children}\r\n      </UserDispatchContext.Provider>\r\n    </UserStateContext.Provider>\r\n  );\r\n}\r\n\r\nfunction useUserState() {\r\n  const context = React.useContext<UserState>(UserStateContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useUserState must be used within a UserProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\nfunction useUserDispatch() {\r\n  const context = React.useContext<React.Dispatch<LoginAction>>(UserDispatchContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useUserDispatch must be used within a UserProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\n\r\n// ###########################################################\r\n\r\nfunction loginUser(\r\n    dispatch : React.Dispatch<LoginAction>,\r\n    party : string,\r\n    userToken : string,\r\n    history : History,\r\n    setIsLoading : React.Dispatch<React.SetStateAction<boolean>>,\r\n    setError : React.Dispatch<React.SetStateAction<boolean>>) {\r\n  setError(false);\r\n  setIsLoading(true);\r\n\r\n  if (!!party) {\r\n    const token = userToken || createToken(party)\r\n    localStorage.setItem(damlPartyKey, party);\r\n    localStorage.setItem(damlTokenKey, token);\r\n\r\n    dispatch({ type: \"LOGIN_SUCCESS\", token, party });\r\n    setError(false);\r\n    setIsLoading(false);\r\n    history.push(\"/app\");\r\n  } else {\r\n    dispatch({ type: \"LOGIN_FAILURE\" });\r\n    setError(true);\r\n    setIsLoading(false);\r\n  }\r\n}\r\n\r\nconst loginDablUser = () => {\r\n  window.location.assign(`https://${dablLoginUrl}`);\r\n}\r\n\r\nfunction signOut(dispatch : React.Dispatch<LoginAction>, history : History) {\r\n  localStorage.removeItem(\"daml.party\");\r\n  localStorage.removeItem(\"daml.token\");\r\n\r\n  dispatch({ type: \"SIGN_OUT_SUCCESS\" });\r\n  history.push(\"/login\");\r\n}\r\n\r\nexport { UserProvider, useUserState, useUserDispatch, loginUser, loginDablUser, signOut };","import { makeStyles, createStyles } from \"@material-ui/styles\";\n\nexport default makeStyles((theme : any) => createStyles({\n  container: {\n    height: \"100vh\",\n    width: \"100vw\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n  },\n  paperRoot: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n    paddingLeft: theme.spacing(6),\n    paddingRight: theme.spacing(6),\n    maxWidth: 404,\n  },\n  errorCode: {\n    marginBottom: theme.spacing(5),\n    fontSize: 84,\n    fontWeight: 600,\n  },\n  safetyText: {\n    marginBottom: theme.spacing(5),\n    fontWeight: 300,\n    color: theme.palette.text,\n    textAlign: \"center\",\n  },\n  backButton: {\n    textTransform: \"none\",\n    fontSize: 22,\n  },\n}));\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport useStyles from \"./styles\";\n\nconst Error = () => {\n  const classes = useStyles();\n\n  return (\n    <Grid container className={classes.container}>\n      <Paper classes={{ root: classes.paperRoot }}>\n        <Typography variant=\"h3\" color=\"primary\" className={classes.errorCode}>404</Typography>\n        <Typography variant=\"h5\" color=\"primary\" className={classes.safetyText}>\n          Oops. Looks like the page you&apos;re looking for no longer exists\n        </Typography>\n        <Button variant=\"contained\" color=\"primary\" component={Link} to=\"/\" size=\"large\" className={classes.backButton}>\n          Back to Home\n        </Button>\n      </Paper>\n    </Grid>\n  );\n}\n\nexport default Error;","import { makeStyles, createStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme : any) => createStyles({\r\n  container: {\r\n    height: \"100vh\",\r\n    width: \"100vw\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n  },\r\n  logotypeContainer: {\r\n    backgroundColor: theme.palette.background.default,\r\n    width: \"60%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  logotypeImage: {\r\n    width: 165,\r\n    marginBottom: theme.spacing(4),\r\n  },\r\n  logotypeText: {\r\n    color: \"#3a478f\",\r\n    fontWeight: 500,\r\n    fontSize: 64,\r\n  },\r\n  formContainer: {\r\n    width: \"40%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: 320,\r\n  },\r\n  tab: {\r\n    fontWeight: 400,\r\n    fontSize: 18,\r\n  },\r\n  dablLoginButton: {\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  errorMessage: {\r\n    textAlign: \"center\",\r\n  },\r\n  textFieldUnderline: {\r\n    \"&:before\": {\r\n      borderBottomColor: theme.palette.primary.light,\r\n    },\r\n    \"&:after\": {\r\n      borderBottomColor: theme.palette.primary.main,\r\n    },\r\n    \"&:hover:before\": {\r\n      borderBottomColor: `${theme.palette.primary.light} !important`,\r\n    },\r\n  },\r\n  textField: {\r\n    borderBottomColor: theme.palette.background.light,\r\n  },\r\n  formButtons: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(4),\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  loginLoader: {\r\n    marginLeft: theme.spacing(4),\r\n  },\r\n}));","import React, { useState } from \"react\";\r\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport { useUserDispatch, loginUser, loginDablUser } from \"../../context/UserContext\";\r\nimport { isLocalDev } from \"../../config\";\r\nimport useStyles from \"./styles\";\r\nimport logo from \"./logo.svg\";\r\n\r\nconst Login = (props : RouteComponentProps) => {\r\n  var classes = useStyles();\r\n  var userDispatch = useUserDispatch();\r\n  var [isLoading, setIsLoading] = useState(false);\r\n  var [error, setError] = useState(false);\r\n  var [loginValue, setLoginValue] = useState(\"\");\r\n  var [passwordValue, setPasswordValue] = useState(\"\");\r\n\r\n  return (\r\n    <Grid container className={classes.container}>\r\n      <div className={classes.logotypeContainer}>\r\n        <img src={logo} alt=\"logo\" className={classes.logotypeImage} />\r\n        <Typography className={classes.logotypeText}>App Template</Typography>\r\n      </div>\r\n      <div className={classes.formContainer}>\r\n        <div className={classes.form}>\r\n            <React.Fragment>\r\n              <Fade in={error}>\r\n                <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                  Something is wrong with your login or password :(\r\n                </Typography>\r\n              </Fade>\r\n              {!isLocalDev &&\r\n                <>\r\n                  <Button className={classes.dablLoginButton} variant=\"contained\" color=\"primary\" size=\"large\" onClick={loginDablUser}>\r\n                    Log in with DABL\r\n                  </Button>\r\n                  <Typography>\r\n                    OR\r\n                  </Typography>\r\n                </>}\r\n              <TextField\r\n                id=\"email\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={loginValue}\r\n                onChange={e => setLoginValue(e.target.value)}\r\n                onKeyDown={e => {\r\n                  if (e.key === \"Enter\") {\r\n                    loginUser(\r\n                      userDispatch,\r\n                      loginValue,\r\n                      passwordValue,\r\n                      props.history,\r\n                      setIsLoading,\r\n                      setError,\r\n                    )\r\n                  }\r\n                }}\r\n                margin=\"normal\"\r\n                placeholder=\"Username\"\r\n                type=\"email\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"password\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={passwordValue}\r\n                onChange={e => setPasswordValue(e.target.value)}\r\n                onKeyDown={e => {\r\n                  if (e.key === \"Enter\") {\r\n                    loginUser(\r\n                      userDispatch,\r\n                      loginValue,\r\n                      passwordValue,\r\n                      props.history,\r\n                      setIsLoading,\r\n                      setError,\r\n                    )\r\n                  }\r\n                }}\r\n                margin=\"normal\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                fullWidth\r\n              />\r\n              <div className={classes.formButtons}>\r\n                {isLoading ?\r\n                  <CircularProgress size={26} className={classes.loginLoader} />\r\n                : <Button\r\n                    disabled={loginValue.length === 0}\r\n                    onClick={() =>\r\n                      loginUser(\r\n                        userDispatch,\r\n                        loginValue,\r\n                        passwordValue,\r\n                        props.history,\r\n                        setIsLoading,\r\n                        setError,\r\n                      )\r\n                    }\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                  >\r\n                    Login\r\n                  </Button>}\r\n              </div>\r\n            </React.Fragment>\r\n        </div>\r\n      </div>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default withRouter(Login);","import { makeStyles, createStyles } from \"@material-ui/styles\";\n\nexport default makeStyles((theme : any) => createStyles({\n  logotype: {\n    color: \"white\",\n    marginLeft: theme.spacing(2.5),\n    marginRight: theme.spacing(2.5),\n    fontWeight: 500,\n    fontSize: 18,\n    whiteSpace: \"nowrap\",\n  },\n  appBar: {\n    width: \"100vw\",\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  toolbar: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  headerMenuButton: {\n    marginLeft: theme.spacing(2),\n    padding: theme.spacing(0.5),\n  },\n  headerIcon: {\n    fontSize: 28,\n    color: \"rgba(255, 255, 255, 0.35)\",\n  },\n}));\n","import React from \"react\";\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExitToApp from \"@material-ui/icons/ExitToApp\";\nimport { useUserDispatch, signOut, useUserState } from \"../../context/UserContext\";\nimport useStyles from \"./styles\";\n\nconst Header = ({ history } : RouteComponentProps) => {\n  const classes = useStyles();\n\n  const userState = useUserState();\n  const userDispatch = useUserDispatch();\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar className={classes.toolbar}>\n        <Typography variant=\"h6\" className={classes.logotype}>\n          DAML App Template\n        </Typography>\n        <div className={classes.grow} />\n        { userState.isAuthenticated && <Typography variant=\"h6\">User: {userState.party}</Typography> }\n        <IconButton\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n          className={classes.headerMenuButton}\n          aria-controls=\"profile-menu\"\n          onClick={(event) => signOut(userDispatch, history)}\n        >\n          <ExitToApp className={classes.headerIcon} />\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default withRouter(Header);","import { makeStyles, createStyles } from \"@material-ui/styles\";\n\nexport default makeStyles((theme : any) => createStyles({\n  drawer: {\n    width: 250,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n  },\n  toolbar: {\n    ...theme.mixins.toolbar,\n  },\n  linkRoot: {},\n  link: {\n    textDecoration: \"none\",\n    \"&:hover, &:focus\": {\n      backgroundColor: theme.palette.background.light,\n    },\n  },\n  linkActive: {\n    backgroundColor: theme.palette.background.light,\n  },\n  linkIcon: {\n    marginRight: theme.spacing(1),\n    color: theme.palette.text.secondary + \"99\",\n    width: 24,\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  linkIconActive: {\n    marginRight: theme.spacing(1),\n    width: 24,\n    display: \"flex\",\n    justifyContent: \"center\",\n    color: theme.palette.primary.main,\n  },\n  linkText: {\n    padding: 0,\n    fontSize: 16,\n    color: theme.palette.text.secondary + \"CC\",\n  },\n  linkTextActive: {\n    padding: 0,\n    fontSize: 16,\n    color: theme.palette.text.primary,\n  },\n}));\n","import React from \"react\";\nimport { Link, withRouter, RouteComponentProps } from \"react-router-dom\";\nimport { Location } from \"history\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListIcon from \"@material-ui/icons/List\";\nimport useStyles from \"./styles\";\n\ntype SidebarLinkProps = {\n  path : string\n  icon : JSX.Element\n  label : string\n  location : Location<unknown>\n}\n\nconst Sidebar = ({ location } : RouteComponentProps) => {\n  const classes = useStyles();\n\n  return (\n    <Drawer open variant=\"permanent\" className={classes.drawer} classes={{ paper: classes.drawer }}>\n      <div className={classes.toolbar} />\n      <List style={{ width: \"100%\" }}>\n        <SidebarLink key={1} label=\"WholeSale Contract\" path=\"/app/wholesale\" icon={(<ListIcon />)} location={location} />\n        <SidebarLink key={2} label=\"EF Contract\" path=\"/app/retail\" icon={(<ListIcon />)} location={location} />\n        <SidebarLink key={3} label=\"Funding Request\" path=\"/app/fundingrequest\" icon={(<ListIcon />)} location={location} />\n        <SidebarLink key={4} label=\"Funding Approved\" path=\"/app/fundingapproved\" icon={(<ListIcon />)} location={location} />\n      </List>\n    </Drawer>\n  );\n};\n\nconst SidebarLink = ({ path, icon, label, location } : SidebarLinkProps) => {\n  const classes = useStyles();\n  const active = path && (location.pathname === path || location.pathname.indexOf(path) !== -1);\n\n  return (\n    <ListItem button component={Link} to={path} className={classes.link} classes={{ root: active ? classes.linkActive : classes.linkRoot }} disableRipple>\n      <ListItemIcon className={active ? classes.linkIconActive : classes.linkIcon}>{icon}</ListItemIcon>\n      <ListItemText classes={{ primary: active ? classes.linkTextActive : classes.linkText }} primary={label} />\n    </ListItem>\n  );\n}\n\nexport default withRouter(Sidebar);\n","import React, { useState } from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nexport interface RegularField {\r\n  label : string,\r\n  type : \"text\" | \"number\" | \"date\"\r\n}\r\n\r\nexport interface SelectionField {\r\n  label : string,\r\n  type : \"selection\",\r\n  items : string[]\r\n}\r\n\r\nexport type Field = RegularField | SelectionField\r\n\r\nexport interface InputDialogProps<T extends {[key: string]: any }> {\r\n  open : boolean,\r\n  title : string,\r\n  defaultValue : T,\r\n  fields : Record<keyof T, Field>,\r\n  onClose : (state : T | null) => Promise<void>\r\n}\r\n\r\nexport function InputDialog<T extends { [key : string] : any }>(props : InputDialogProps<T>) {\r\n  const [ state, setState ] = useState<T>(props.defaultValue);\r\n\r\n  function fieldsToInput([fieldName, field] : [string, Field], index : number) : JSX.Element {\r\n    if (field.type === \"selection\") {\r\n      return (\r\n        <FormControl key={index} fullWidth>\r\n          <InputLabel required>{field.label}</InputLabel>\r\n          <Select\r\n              value={state[fieldName]}\r\n              defaultValue={\"\"}\r\n              onChange={e => setState({ ...state, [fieldName]: e.target.value })}>\r\n            {field.items.map(item => (<MenuItem key={item} value={item}>{item}</MenuItem>))}\r\n          </Select>\r\n        </FormControl>\r\n      )\r\n    } else {\r\n      return (\r\n        <TextField\r\n          required\r\n          autoFocus\r\n          fullWidth\r\n          key={index}\r\n          label={field.label}\r\n          type={field.type}\r\n          onChange={e => setState({ ...state, [fieldName]: e.target.value })}\r\n          InputLabelProps={{\r\n            shrink:true,\r\n            required:true,\r\n          }}\r\n          placeholder={(field.type===\"date\")?\"YYYY-MM-DD\":\"\"}\r\n        />\r\n      )\r\n    }\r\n  }\r\n  const fieldsAsArray : [string, Field][] = Object.entries(props.fields);\r\n\r\n  return (\r\n    <Dialog open={props.open} onClose={() => props.onClose(null)} maxWidth=\"sm\" fullWidth>\r\n      <DialogTitle>\r\n        {props.title}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        {fieldsAsArray.map((value, index) => fieldsToInput(value, index))}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => props.onClose(null)} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={() => props.onClose(state)} color=\"primary\">\r\n          Okay\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\n","import { makeStyles, createStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme : any) => createStyles({\r\n  tableCell: {\r\n    verticalAlign: \"top\",\r\n    paddingTop: 6,\r\n    paddingBottom: 6,\r\n    fontSize: \"0.75rem\"\r\n  },\r\n  tableCellButton: {\r\n    verticalAlign: \"center\",\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n    fontSize: \"0.75rem\"\r\n  },\r\n  tableRow: {\r\n    height: \"auto\"\r\n  },\r\n  textField: {\r\n    fontSize: \"0.75rem\"\r\n  },\r\n  textFieldUnderline: {\r\n    \"&:before\": {\r\n      borderBottomColor: theme.palette.primary.light,\r\n    },\r\n    \"&:after\": {\r\n      borderBottomColor: theme.palette.primary.main,\r\n    },\r\n    \"&:hover:before\": {\r\n      borderBottomColor: `${theme.palette.primary.light} !important`,\r\n    },\r\n  },\r\n  choiceButton: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n  },\r\n}));\r\n","// Copyright (c) RethinkLedgers\r\n\r\nimport React, { useState }  from 'react';\r\nimport { Container, Grid,  } from 'semantic-ui-react' ;\r\nimport { TableHead,TableBody, TableRow, TableCell, Table } from '@material-ui/core' ;\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { EF } from '@daml.js/ef-app/lib';\r\nimport { useParty, useLedger,  useStreamQueries } from '@daml/react';\r\nimport Ledger from \"@daml/ledger\";\r\nimport { WholesaleContract  } from \"@daml.js/ef-app/lib/EF\";\r\nimport { InputDialog, InputDialogProps } from \"./InputDialog\";\r\nimport useStyles from \"./styles\";\r\n\r\n\r\n\r\nexport default function WholesaleContractList() {\r\n\r\n  const assets = useStreamQueries(EF.WholesaleContract).contracts;\r\n  const classes = useStyles();\r\n  const party = useParty();\r\n  const ledger: Ledger = useLedger();\r\n  const today = (new Date()).toISOString().slice(0, 10);\r\n\r\n\r\n  type InputFieldsForNewAsset = Omit<WholesaleContract, \"Wholesale Contract\">;\r\n  const defaultNewAssetProps: InputDialogProps<InputFieldsForNewAsset> = {\r\n      open: false,\r\n      title: \"New WholeSale Contract\",\r\n      defaultValue: {\r\n        originator : party,\r\n        dealer : party,\r\n        eftype: \"Lease\",\r\n        startDate : \"\",\r\n        endDate : \"\",\r\n        duration : \"\",\r\n        amount : \"0\",\r\n        rate : \"0.0\",\r\n        assetType : \"Van\",\r\n        vin : \"\",\r\n        closingContract: \"\",\r\n        status: \"\",\r\n      },\r\n      fields: {\r\n          originator: {\r\n              label: \"Originator\",\r\n              type: \"text\",\r\n          },\r\n          dealer: {\r\n              label: \"Dealer\",\r\n              type: \"text\"\r\n          },\r\n          eftype: {\r\n            label: \"EF Type\",\r\n            type: \"selection\",\r\n            items: [\"Loan\", \"Lease\"]\r\n          },\r\n          startDate: {\r\n              label: \"Start Date\",\r\n              type: \"date\"\r\n          },\r\n          endDate: {\r\n            label: \"End Date\",\r\n            type: \"date\"\r\n        },\r\n          duration: {\r\n            label: \"Duration\",\r\n            type: \"selection\",\r\n            items: [\"3yr\", \"1yr\"]\r\n          },\r\n          amount: {\r\n            label: \"Amount\",\r\n            type: \"number\"\r\n          },\r\n          rate: {\r\n            label: \"Rate\",\r\n            type: \"number\" \r\n          },\r\n          assetType: {\r\n            label: \"Asset Type\",\r\n            type: \"selection\",\r\n            items: [\"Van\", \"Tractor\"]\r\n          },\r\n          vin: {\r\n            label: \"Vin\",\r\n            type: \"text\"\r\n          },\r\n          closingContract: {\r\n            label: \"Closing Contract\",\r\n            type: \"text\"\r\n          },\r\n          status: {\r\n            label: \"Status\",\r\n            type: \"selection\",\r\n            items: [\"Funded\", \"Closed\"]\r\n          }\r\n      },\r\n      onClose: async function () { }\r\n  };\r\n  const [newAssetProps, setNewAssetProps] = useState(defaultNewAssetProps);\r\n  function showNewAsset() {\r\n      async function onClose(state: InputFieldsForNewAsset | null) {\r\n          setNewAssetProps({ ...defaultNewAssetProps, open: false });\r\n          if (!state) return;\r\n          const wholesaleData = { ...state };\r\n          await ledger.create(EF.WholesaleContract, wholesaleData);\r\n      };\r\n      setNewAssetProps({ ...defaultNewAssetProps, open: true, onClose });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Grid >\r\n      <InputDialog {...newAssetProps} />\r\n            <Button color=\"primary\" size=\"small\" className={classes.choiceButton} variant=\"contained\" onClick={() => showNewAsset()}>\r\n                Create New Asset\r\n            </Button>\r\n\r\n        <Table size =\"small\">\r\n          <TableHead>\r\n            <div> \r\n              <p>WholeSaleContracts</p>\r\n            </div>\r\n            <TableRow>\r\n               <TableCell key ={0}> Contract</TableCell>\r\n               <TableCell key ={1}> Originator</TableCell>\r\n               <TableCell key ={2}> Dealer</TableCell>\r\n               <TableCell key ={3}> Amount</TableCell>\r\n               <TableCell key ={4}> Rate</TableCell>\r\n            </TableRow>\r\n\r\n          </TableHead>\r\n          <TableBody>\r\n           {assets.map(a => (\r\n            <TableRow key ={a.contractId}>\r\n               <TableCell key={0} >{a.contractId}</TableCell>\r\n               <TableCell key={1} >{a.payload.originator}</TableCell>\r\n               <TableCell key={2} >{a.payload.dealer}</TableCell>\r\n               <TableCell key={3} >{a.payload.amount}</TableCell>\r\n               <TableCell key={4} >{a.payload.rate}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n        </Table>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nexport interface RegularField {\r\n  label : string,\r\n  type : \"text\" | \"number\" | \"date\"\r\n}\r\n\r\nexport interface SelectionField {\r\n  label : string,\r\n  type : \"selection\",\r\n  items : string[]\r\n}\r\n\r\nexport type Field = RegularField | SelectionField\r\n\r\nexport interface InputDialogProps<T extends {[key: string]: any }> {\r\n  open : boolean,\r\n  title : string,\r\n  defaultValue : T,\r\n  fields : Record<keyof T, Field>,\r\n  onClose : (state : T | null) => Promise<void>\r\n}\r\n\r\nexport function InputDialog<T extends { [key : string] : any }>(props : InputDialogProps<T>) {\r\n  const [ state, setState ] = useState<T>(props.defaultValue);\r\n\r\n  function fieldsToInput([fieldName, field] : [string, Field], index : number) : JSX.Element {\r\n    if (field.type === \"selection\") {\r\n      return (\r\n        <FormControl key={index} fullWidth>\r\n          <InputLabel required>{field.label}</InputLabel>\r\n          <Select\r\n              value={state[fieldName]}\r\n              defaultValue={\"\"}\r\n              onChange={e => setState({ ...state, [fieldName]: e.target.value })}>\r\n            {field.items.map(item => (<MenuItem key={item} value={item}>{item}</MenuItem>))}\r\n          </Select>\r\n        </FormControl>\r\n      )\r\n    } else {\r\n      return (\r\n        <TextField\r\n          required\r\n          autoFocus\r\n          fullWidth\r\n          key={index}\r\n          label={field.label}\r\n          type={field.type}\r\n          onChange={e => setState({ ...state, [fieldName]: e.target.value })}\r\n          InputLabelProps={{\r\n            shrink:true,\r\n            required:true,\r\n          }}\r\n          placeholder={(field.type===\"date\")?\"YYYY-MM-DD\":\"\"}\r\n        />\r\n      )\r\n    }\r\n  }\r\n  const fieldsAsArray : [string, Field][] = Object.entries(props.fields);\r\n\r\n  return (\r\n    <Dialog open={props.open} onClose={() => props.onClose(null)} maxWidth=\"sm\" fullWidth>\r\n      <DialogTitle>\r\n        {props.title}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        {fieldsAsArray.map((value, index) => fieldsToInput(value, index))}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => props.onClose(null)} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={() => props.onClose(state)} color=\"primary\">\r\n          Okay\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\n","import { makeStyles, createStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme : any) => createStyles({\r\n  tableCell: {\r\n    verticalAlign: \"top\",\r\n    paddingTop: 6,\r\n    paddingBottom: 6,\r\n    fontSize: \"0.75rem\"\r\n  },\r\n  tableCellButton: {\r\n    verticalAlign: \"center\",\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n    fontSize: \"0.75rem\"\r\n  },\r\n  tableRow: {\r\n    height: \"auto\"\r\n  },\r\n  textField: {\r\n    fontSize: \"0.75rem\"\r\n  },\r\n  textFieldUnderline: {\r\n    \"&:before\": {\r\n      borderBottomColor: theme.palette.primary.light,\r\n    },\r\n    \"&:after\": {\r\n      borderBottomColor: theme.palette.primary.main,\r\n    },\r\n    \"&:hover:before\": {\r\n      borderBottomColor: `${theme.palette.primary.light} !important`,\r\n    },\r\n  },\r\n  choiceButton: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n  },\r\n}));\r\n","// Copyright (c) RethinkLedgers\r\n\r\nimport React, { useState } from 'react';\r\nimport { Container, Grid, } from 'semantic-ui-react';\r\nimport { TableHead, TableBody, TableRow, TableCell, Table } from '@material-ui/core';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { EF } from '@daml.js/ef-app/lib';\r\nimport { useParty, useLedger, useStreamQueries } from '@daml/react';\r\nimport Ledger from \"@daml/ledger\";\r\nimport { EFContract } from \"@daml.js/ef-app/lib/EF\";\r\nimport { FundingRequest } from \"@daml.js/ef-app/lib/EF\";\r\nimport { InputDialog, InputDialogProps } from \"./InputDialog\";\r\nimport useStyles from \"./styles\";\r\n\r\n\r\n\r\nexport default function EFContractList() {\r\n\r\n  const retailcontracts = useStreamQueries(EF.EFContract).contracts;\r\n  const classes = useStyles();\r\n  const party = useParty();\r\n  const ledger: Ledger = useLedger();\r\n  const today = (new Date()).toISOString().slice(0, 10);\r\n\r\n\r\n  type InputFieldsForNewAsset = Omit<EFContract, \"EFContract\">;\r\n  const defaultNewAssetProps: InputDialogProps<InputFieldsForNewAsset> = {\r\n    open: false,\r\n    title: \"New RetailContract\",\r\n    defaultValue: {\r\n      originator: party,\r\n      business: party,\r\n      eftype: \"Lease\",\r\n      startdate: \"\",\r\n      duration: \"\",\r\n      amount: \"0\",\r\n      rate: \"0.0\",\r\n      assetType: \"Van\",\r\n      vin: \"\",\r\n      businessCreditScore: \"\",\r\n      dealerCommission: \"\",\r\n    },\r\n    fields: {\r\n      originator: {\r\n        label: \"Originator\",\r\n        type: \"text\",\r\n      },\r\n      business: {\r\n        label: \"Business\",\r\n        type: \"text\"\r\n      },\r\n      eftype: {\r\n        label: \"EF Type\",\r\n        type: \"selection\",\r\n        items: [\"Loan\", \"Lease\"]\r\n      },\r\n      startdate: {\r\n        label: \"Date of Appraisal\",\r\n        type: \"date\"\r\n      },\r\n      duration: {\r\n        label: \"Duration\",\r\n        type: \"selection\",\r\n        items: [\"3yr\", \"1yr\"]\r\n      },\r\n      amount: {\r\n        label: \"Amount\",\r\n        type: \"number\"\r\n      },\r\n      rate: {\r\n        label: \"Rate\",\r\n        type: \"number\"\r\n      },\r\n      assetType: {\r\n        label: \"Asset Type\",\r\n        type: \"selection\",\r\n        items: [\"Van\", \"Tractor\"]\r\n      },\r\n      vin: {\r\n        label: \"Vin\",\r\n        type: \"text\"\r\n      },\r\n      businessCreditScore: {\r\n        label: \"Business Score\",\r\n        type: \"number\"\r\n      },\r\n      dealerCommission: {\r\n        label: \"Commission\",\r\n        type: \"number\"\r\n      }\r\n    },\r\n    onClose: async function () { }\r\n  };\r\n  const [newAssetProps, setNewAssetProps] = useState(defaultNewAssetProps);\r\n  function showNewAsset() {\r\n    async function onClose(state: InputFieldsForNewAsset | null) {\r\n      setNewAssetProps({ ...defaultNewAssetProps, open: false });\r\n      if (!state) return;\r\n      const efData = { ...state };\r\n      await ledger.create(EF.EFContract, efData);\r\n    };\r\n    setNewAssetProps({ ...defaultNewAssetProps, open: true, onClose });\r\n  };\r\n\r\n\r\n  const defaultRequestProps: InputDialogProps<FundingRequest> = {\r\n    open: false,\r\n    title: \"Funding Request\",\r\n    defaultValue: { newLessor: party,  newFee: \"\", newFundingContractId: \"\"},\r\n    fields: {\r\n      newLessor: {\r\n        label: \"Lessor\",\r\n        type: \"text\"\r\n      },\r\n      newFee: {\r\n        label: \"Fee\",\r\n        type: \"number\"\r\n      },\r\n      newFundingContractId: {\r\n        label: \"Funding Contract ID\",\r\n        type: \"text\"\r\n      }\r\n    },\r\n    onClose: async function () { }\r\n  };\r\n\r\n\r\n  const [requestProps, setRequestProps] = useState(defaultRequestProps);\r\n  // One can pass the original contracts CreateEvent\r\n  function showRequest(asset: EF.EFContract.CreateEvent) {\r\n    async function onClose(state: FundingRequest | null) {\r\n      setRequestProps({ ...defaultRequestProps, open: false });\r\n      if (!state) return;\r\n      await ledger.exercise(EF.EFContract.FundingRequest, asset.contractId, state);\r\n    };\r\n    setRequestProps({ ...defaultRequestProps, open: true, onClose })\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <Container>\r\n      <Grid >\r\n        <InputDialog {...newAssetProps} />\r\n        <InputDialog {...requestProps} />\r\n        <Button color=\"primary\" size=\"small\" className={classes.choiceButton} variant=\"contained\" onClick={() => showNewAsset()}>\r\n          Create New Asset\r\n            </Button>\r\n\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <div>\r\n              <p>RetailContracts</p>\r\n            </div>\r\n            <TableRow>\r\n              <TableCell key={0}> Contract</TableCell>\r\n              <TableCell key={1}> Originator</TableCell>\r\n              <TableCell key={2}> Businesss</TableCell>\r\n              <TableCell key={3}> EF Type</TableCell>\r\n              <TableCell key={4}> Duration</TableCell>\r\n              <TableCell key={5}> Amount</TableCell>\r\n              <TableCell key={6}> Rate</TableCell>\r\n              <TableCell key={7}> Asset Type</TableCell>\r\n              <TableCell key={8}> Vin</TableCell>\r\n              <TableCell key={9}> Business Score</TableCell>\r\n              <TableCell key={10}> Commission</TableCell>\r\n              <TableCell key={11} className={classes.tableCell}>Request</TableCell>\r\n            </TableRow>\r\n\r\n          </TableHead>\r\n          <TableBody>\r\n            {retailcontracts.map(r => (\r\n              <TableRow key={r.contractId}>\r\n                <TableCell key={0} >{r.contractId}</TableCell>\r\n                <TableCell key={1} >{r.payload.originator}</TableCell>\r\n                <TableCell key={2} >{r.payload.business}</TableCell>\r\n                <TableCell key={3} >{r.payload.eftype}</TableCell>\r\n                <TableCell key={4} >{r.payload.duration}</TableCell>\r\n                <TableCell key={5} >{r.payload.amount}</TableCell>\r\n                <TableCell key={6} >{r.payload.rate}</TableCell>\r\n                <TableCell key={7} >{r.payload.assetType}</TableCell>\r\n                <TableCell key={8} >{r.payload.vin}</TableCell>\r\n                <TableCell key={9} >{r.payload.businessCreditScore}</TableCell>\r\n                <TableCell key={10} >{r.payload.dealerCommission}</TableCell>\r\n                <TableCell key={11} className={classes.tableCellButton}>\r\n                  <Button color=\"primary\" size=\"small\" className={classes.choiceButton} variant=\"contained\" onClick={() => showRequest(r)}>Funding Request</Button>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nexport interface RegularField {\r\n  label : string,\r\n  type : \"text\" | \"number\" | \"date\"\r\n}\r\n\r\nexport interface SelectionField {\r\n  label : string,\r\n  type : \"selection\",\r\n  items : string[]\r\n}\r\n\r\nexport type Field = RegularField | SelectionField\r\n\r\nexport interface InputDialogProps<T extends {[key: string]: any }> {\r\n  open : boolean,\r\n  title : string,\r\n  defaultValue : T,\r\n  fields : Record<keyof T, Field>,\r\n  onClose : (state : T | null) => Promise<void>\r\n}\r\n\r\nexport function InputDialog<T extends { [key : string] : any }>(props : InputDialogProps<T>) {\r\n  const [ state, setState ] = useState<T>(props.defaultValue);\r\n\r\n  function fieldsToInput([fieldName, field] : [string, Field], index : number) : JSX.Element {\r\n    if (field.type === \"selection\") {\r\n      return (\r\n        <FormControl key={index} fullWidth>\r\n          <InputLabel required>{field.label}</InputLabel>\r\n          <Select\r\n              value={state[fieldName]}\r\n              defaultValue={\"\"}\r\n              onChange={e => setState({ ...state, [fieldName]: e.target.value })}>\r\n            {field.items.map(item => (<MenuItem key={item} value={item}>{item}</MenuItem>))}\r\n          </Select>\r\n        </FormControl>\r\n      )\r\n    } else {\r\n      return (\r\n        <TextField\r\n          required\r\n          autoFocus\r\n          fullWidth\r\n          key={index}\r\n          label={field.label}\r\n          type={field.type}\r\n          onChange={e => setState({ ...state, [fieldName]: e.target.value })}\r\n          InputLabelProps={{\r\n            shrink:true,\r\n            required:true,\r\n          }}\r\n          placeholder={(field.type===\"date\")?\"YYYY-MM-DD\":\"\"}\r\n        />\r\n      )\r\n    }\r\n  }\r\n  const fieldsAsArray : [string, Field][] = Object.entries(props.fields);\r\n\r\n  return (\r\n    <Dialog open={props.open} onClose={() => props.onClose(null)} maxWidth=\"sm\" fullWidth>\r\n      <DialogTitle>\r\n        {props.title}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        {fieldsAsArray.map((value, index) => fieldsToInput(value, index))}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => props.onClose(null)} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={() => props.onClose(state)} color=\"primary\">\r\n          Okay\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\n","import { makeStyles, createStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme : any) => createStyles({\r\n  tableCell: {\r\n    verticalAlign: \"top\",\r\n    paddingTop: 6,\r\n    paddingBottom: 6,\r\n    fontSize: \"0.75rem\"\r\n  },\r\n  tableCellButton: {\r\n    verticalAlign: \"center\",\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n    fontSize: \"0.75rem\"\r\n  },\r\n  tableRow: {\r\n    height: \"auto\"\r\n  },\r\n  textField: {\r\n    fontSize: \"0.75rem\"\r\n  },\r\n  textFieldUnderline: {\r\n    \"&:before\": {\r\n      borderBottomColor: theme.palette.primary.light,\r\n    },\r\n    \"&:after\": {\r\n      borderBottomColor: theme.palette.primary.main,\r\n    },\r\n    \"&:hover:before\": {\r\n      borderBottomColor: `${theme.palette.primary.light} !important`,\r\n    },\r\n  },\r\n  choiceButton: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n  },\r\n}));\r\n","import React, { useState } from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useStreamQueries, useLedger, useParty } from \"@daml/react\";\r\nimport Ledger from \"@daml/ledger\";\r\nimport { FundingApproval, FundingContractRequest  } from \"@daml.js/ef-app/lib/EF\";\r\nimport { EF } from '@daml.js/ef-app/lib';\r\nimport { InputDialog, InputDialogProps } from \"./InputDialog\";\r\nimport useStyles from \"./styles\";\r\nimport { ContractId } from \"@daml/types\";\r\n\r\nexport default function FundingRequestList() {\r\n    const assets = useStreamQueries(EF.FundingContractRequest).contracts;\r\n    const classes = useStyles();\r\n    const party = useParty();\r\n    const contractid = ContractId\r\n    const ledger : Ledger = useLedger();\r\n\r\n    const defaultApprovalProps : InputDialogProps<FundingApproval> = {\r\n      open: false,\r\n      title: \"Funding Approval\",\r\n      defaultValue: {  newFundingDate: \"\",  newDealerCommission: \"\",  selectedlessor: party, newFundingRequestId: \"\"},\r\n      fields :{\r\n        newFundingDate : {\r\n          label: \"FundingDate\",\r\n          type: \"date\"\r\n        },\r\n        newDealerCommission : {\r\n          label: \"Dealer Commision\",\r\n          type: \"number\"\r\n        },\r\n        selectedlessor : {\r\n          label: \"Lessor\",\r\n          type: \"text\"\r\n        },\r\n        newFundingRequestId : {\r\n          label: \"FundingRequest Contract Id\",\r\n          type: \"text\"\r\n        }\r\n      },\r\n      onClose: async function() {}\r\n    };\r\n\r\n  \r\n    const [ approvalProps, setApprovalProps ] = useState(defaultApprovalProps);\r\n    // One can pass the original contracts CreateEvent\r\n    function showApproval(asset : EF.FundingContractRequest.CreateEvent) {\r\n      async function onClose(state : FundingApproval | null) {\r\n        setApprovalProps({ ...defaultApprovalProps, open: false});\r\n        if (!state) return;\r\n        await ledger.exercise(EF.FundingContractRequest.FundingApproval, asset.contractId, state);\r\n      };\r\n      setApprovalProps({ ...defaultApprovalProps, open: true, onClose})\r\n    };\r\n  \r\n\r\n    return (\r\n      <>\r\n        <InputDialog { ...approvalProps } />\r\n  \r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow className={classes.tableRow}>\r\n              <TableCell key={0} className={classes.tableCell}>Lessor</TableCell>\r\n              <TableCell key={1} className={classes.tableCell}>OriginationFee</TableCell>\r\n              <TableCell key={2} className={classes.tableCell}>Originator</TableCell>\r\n              <TableCell key={3} className={classes.tableCell}>Approval</TableCell>\r\n           \r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {assets.map(a => (\r\n              <TableRow key={a.contractId} className={classes.tableRow}>\r\n                <TableCell key={0} className={classes.tableCell}>{a.payload.lessor}</TableCell>\r\n                <TableCell key={1} className={classes.tableCell}>{a.payload.originationFee}</TableCell>\r\n                <TableCell key={2} className={classes.tableCell}>{a.payload.fundingContract.originator}</TableCell>\r\n                <TableCell key={3} className={classes.tableCellButton}>\r\n                  <Button color=\"primary\" size=\"small\" className={classes.choiceButton} variant=\"contained\"  onClick={() => showApproval(a)}>Approval</Button>\r\n                </TableCell>\r\n\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </>\r\n    );\r\n}\r\n","import { makeStyles, createStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme : any) => createStyles({\r\n  tableCell: {\r\n    verticalAlign: \"top\",\r\n    paddingTop: 6,\r\n    paddingBottom: 6,\r\n    fontSize: \"0.75rem\"\r\n  },\r\n  tableCellButton: {\r\n    verticalAlign: \"center\",\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n    fontSize: \"0.75rem\"\r\n  },\r\n  tableRow: {\r\n    height: \"auto\"\r\n  },\r\n  textField: {\r\n    fontSize: \"0.75rem\"\r\n  },\r\n  textFieldUnderline: {\r\n    \"&:before\": {\r\n      borderBottomColor: theme.palette.primary.light,\r\n    },\r\n    \"&:after\": {\r\n      borderBottomColor: theme.palette.primary.main,\r\n    },\r\n    \"&:hover:before\": {\r\n      borderBottomColor: `${theme.palette.primary.light} !important`,\r\n    },\r\n  },\r\n  choiceButton: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n  },\r\n}));\r\n","import React, { useState } from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport { useStreamQueries,  } from \"@daml/react\";\r\nimport { EF } from '@daml.js/ef-app/lib';\r\nimport useStyles from \"./styles\";\r\n\r\n\r\nexport default function FundingApprovalList() {\r\n    const assets = useStreamQueries(EF.FundingContractApproval).contracts;\r\n    const classes = useStyles();\r\n   \r\n\r\n  return (\r\n    <>\r\n    <Table size=\"small\">\r\n    <TableHead>\r\n      <TableRow className={classes.tableRow}>\r\n        <TableCell key={0} className={classes.tableCell}>Lessor</TableCell>\r\n        <TableCell key={1} className={classes.tableCell}>FundingDate</TableCell>\r\n        <TableCell key={2} className={classes.tableCell}>Funding Contract ID</TableCell>\r\n        <TableCell key={3} className={classes.tableCell}>Amount</TableCell>\r\n      </TableRow>\r\n    </TableHead>\r\n    <TableBody>\r\n      {assets.map(a => (\r\n        <TableRow key={a.contractId} className={classes.tableRow}>\r\n          <TableCell key={0} className={classes.tableCell}>{a.payload.lessor}</TableCell>\r\n          <TableCell key={1} className={classes.tableCell}>{a.payload.fundingDate}</TableCell>\r\n          <TableCell key={1} className={classes.tableCell}>{a.payload.fundingRequestId}</TableCell>\r\n          <TableCell key={2} className={classes.tableCell}>{a.payload.fundingRequest.fundingContract.amount}</TableCell>\r\n        </TableRow>\r\n          ))}\r\n      </TableBody>\r\n      </Table>\r\n      </>\r\n    );\r\n}\r\n\r\n","import { makeStyles, createStyles } from \"@material-ui/styles\";\n\nexport default makeStyles((theme : any) => createStyles({\n  root: {\n    display: \"flex\",\n    maxWidth: \"100vw\",\n    overflowX: \"hidden\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    width: `calc(100vw - ${240 + theme.spacing(6)}px)`,\n    minHeight: \"100vh\",\n  },\n  fakeToolbar: {\n    ...theme.mixins.toolbar,\n  },\n}));\n","import React from \"react\";\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport DamlLedger from \"@daml/react\";\nimport Header from \"../Header/Header\";\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport WholeSaleContractList from \"../../pages/wholesale/WholesaleContract\";\nimport EFContractList from \"../../pages/retail/EFContract\";\nimport FundingRequestList from \"../../pages/fundingrequest/FundingRequest\";\nimport FundingApprovalList from \"../../pages/fundingapproval/FundingApproval\";\nimport { useUserState } from \"../../context/UserContext\";\nimport { wsBaseUrl, httpBaseUrl } from \"../../config\";\nimport useStyles from \"./styles\";\n\nconst Layout = () => {\n  const classes = useStyles();\n  const user = useUserState();\n\n  if(!user.isAuthenticated){\n    return null;\n  } else {\n    return (\n      <DamlLedger party={user.party} token={user.token} httpBaseUrl={httpBaseUrl} wsBaseUrl={wsBaseUrl}>\n        <div className={classes.root}>\n            <>\n              <Header />\n              <Sidebar />\n              <div className={classes.content}>\n                <div className={classes.fakeToolbar} />\n                <Switch>\n                  <Route path=\"/app/wholesale\" component={WholeSaleContractList} />\n                  <Route path=\"/app/retail\" component={EFContractList} />\n                  <Route path=\"/app/fundingrequest\" component={FundingRequestList} />\n                  <Route path=\"/app/fundingapproved\" component={FundingApprovalList} />\n                </Switch>\n              </div>\n            </>\n        </div>\n      </DamlLedger>\n    );\n  }\n}\n\nexport default withRouter(Layout);\n","import React, { useEffect } from \"react\";\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { damlPartyKey, damlTokenKey } from \"../config\";\nimport { useUserState, useUserDispatch } from \"../context/UserContext\";\nimport ErrorComponent from \"../pages/error/Error\";\nimport Login from \"../pages/login/Login\";\nimport Layout from \"./Layout/Layout\";\n\nexport default function App() {\n  const userState = useUserState();\n\n  return (\n    <HashRouter>\n      <Switch>\n        <Route exact path=\"/\" component={RootRoute} />\n        <Route\n          exact\n          path=\"/app\"\n          render={() => <Redirect to=\"/app/retail\" />}\n        />\n        <PrivateRoute path=\"/app\" component={Layout} />\n        <PublicRoute path=\"/login\" component={Login} />\n        <Route component={ErrorComponent} />\n      </Switch>\n    </HashRouter>\n  );\n\n  // #######################################################################\n\n  function RootRoute() {\n    const userDispatch = useUserDispatch();\n\n    useEffect(() => {\n      const url = new URL(window.location.toString());\n      const token = url.searchParams.get('token');\n      if (token === null) {\n        return;\n      }\n      const party = url.searchParams.get('party');\n      if (party === null) {\n        throw Error(\"When 'token' is passed via URL, 'party' must be passed too.\");\n      }\n      localStorage.setItem(damlPartyKey, party);\n      localStorage.setItem(damlTokenKey, token);\n\n      userDispatch({ type: \"LOGIN_SUCCESS\", token, party });\n    })\n\n    return (\n      <Redirect to=\"/app/retail\" />\n    )\n  }\n\n  function PrivateRoute({ component, ...rest }: any) {\n    return (\n      <Route\n        {...rest}\n        render={props =>\n          userState.isAuthenticated ? (\n            React.createElement(component, props)\n          ) : (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: {\n                  from: props.location,\n                },\n              }}\n            />\n          )\n        }\n      />\n    );\n  }\n\n  function PublicRoute({ component, ...rest }: any) {\n    return (\n      <Route\n        {...rest}\n        render={props =>\n          userState.isAuthenticated ? (\n            <Redirect\n              to={{\n                pathname: \"/\",\n              }}\n            />\n          ) : (\n            React.createElement(component, props)\n          )\n        }\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { CssBaseline } from \"@material-ui/core\";\n\nimport Themes from \"./themes\";\nimport App from \"./components/App\";\nimport { UserProvider } from \"./context/UserContext\";\n\nReactDOM.render(\n  <UserProvider>\n    <ThemeProvider theme={Themes.default}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </UserProvider>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}