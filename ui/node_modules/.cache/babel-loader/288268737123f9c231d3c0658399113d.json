{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\bartc\\\\Documents\\\\Github\\\\EF\\\\ef-app\\\\ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:\\\\Users\\\\bartc\\\\Documents\\\\Github\\\\EF\\\\ef-app\\\\ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\bartc\\\\Documents\\\\Github\\\\EF\\\\ef-app\\\\ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import Dialog from\"@material-ui/core/Dialog\";import DialogTitle from\"@material-ui/core/DialogTitle\";import DialogContent from\"@material-ui/core/DialogContent\";import DialogActions from\"@material-ui/core/DialogActions\";import Button from\"@material-ui/core/Button\";import TextField from\"@material-ui/core/TextField\";import Select from\"@material-ui/core/Select\";import InputLabel from\"@material-ui/core/InputLabel\";import FormControl from\"@material-ui/core/FormControl\";import MenuItem from\"@material-ui/core/MenuItem\";export function InputDialog(props){var _useState=useState(props.defaultValue),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];function fieldsToInput(_ref,index){var _ref2=_slicedToArray(_ref,2),fieldName=_ref2[0],field=_ref2[1];if(field.type===\"selection\"){return/*#__PURE__*/React.createElement(FormControl,{key:index,fullWidth:true},/*#__PURE__*/React.createElement(InputLabel,{required:true},field.label),/*#__PURE__*/React.createElement(Select,{value:state[fieldName],defaultValue:\"\",onChange:function onChange(e){return setState(_objectSpread(_objectSpread({},state),{},_defineProperty({},fieldName,e.target.value)));}},field.items.map(function(item){return/*#__PURE__*/React.createElement(MenuItem,{key:item,value:item},item);})));}else{return/*#__PURE__*/React.createElement(TextField,{required:true,autoFocus:true,fullWidth:true,key:index,label:field.label,type:field.type,onChange:function onChange(e){return setState(_objectSpread(_objectSpread({},state),{},_defineProperty({},fieldName,e.target.value)));},InputLabelProps:{shrink:true,required:true},placeholder:field.type===\"date\"?\"YYYY-MM-DD\":\"\"});}}var fieldsAsArray=Object.entries(props.fields);return/*#__PURE__*/React.createElement(Dialog,{open:props.open,onClose:function onClose(){return props.onClose(null);},maxWidth:\"sm\",fullWidth:true},/*#__PURE__*/React.createElement(DialogTitle,null,props.title),/*#__PURE__*/React.createElement(DialogContent,null,fieldsAsArray.map(function(value,index){return fieldsToInput(value,index);})),/*#__PURE__*/React.createElement(DialogActions,null,/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return props.onClose(null);},color:\"primary\"},\"Cancel\"),/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return props.onClose(state);},color:\"primary\"},\"Okay\")));}","map":{"version":3,"sources":["C:/Users/bartc/Documents/Github/EF/ef-app/ui/src/pages/mainscreen/InputDialog.tsx"],"names":["React","useState","Dialog","DialogTitle","DialogContent","DialogActions","Button","TextField","Select","InputLabel","FormControl","MenuItem","InputDialog","props","defaultValue","state","setState","fieldsToInput","index","fieldName","field","type","label","e","target","value","items","map","item","shrink","required","fieldsAsArray","Object","entries","fields","open","onClose","title"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nexport interface RegularField {\r\n  label : string,\r\n  type : \"text\" | \"number\" | \"date\"\r\n}\r\n\r\nexport interface SelectionField {\r\n  label : string,\r\n  type : \"selection\",\r\n  items : string[]\r\n}\r\n\r\nexport type Field = RegularField | SelectionField\r\n\r\nexport interface InputDialogProps<T extends {[key: string]: any }> {\r\n  open : boolean,\r\n  title : string,\r\n  defaultValue : T,\r\n  fields : Record<keyof T, Field>,\r\n  onClose : (state : T | null) => Promise<void>\r\n}\r\n\r\nexport function InputDialog<T extends { [key : string] : any }>(props : InputDialogProps<T>) {\r\n  const [ state, setState ] = useState<T>(props.defaultValue);\r\n\r\n  function fieldsToInput([fieldName, field] : [string, Field], index : number) : JSX.Element {\r\n    if (field.type === \"selection\") {\r\n      return (\r\n        <FormControl key={index} fullWidth>\r\n          <InputLabel required>{field.label}</InputLabel>\r\n          <Select\r\n              value={state[fieldName]}\r\n              defaultValue={\"\"}\r\n              onChange={e => setState({ ...state, [fieldName]: e.target.value })}>\r\n            {field.items.map(item => (<MenuItem key={item} value={item}>{item}</MenuItem>))}\r\n          </Select>\r\n        </FormControl>\r\n      )\r\n    } else {\r\n      return (\r\n        <TextField\r\n          required\r\n          autoFocus\r\n          fullWidth\r\n          key={index}\r\n          label={field.label}\r\n          type={field.type}\r\n          onChange={e => setState({ ...state, [fieldName]: e.target.value })}\r\n          InputLabelProps={{\r\n            shrink:true,\r\n            required:true,\r\n          }}\r\n          placeholder={(field.type===\"date\")?\"YYYY-MM-DD\":\"\"}\r\n        />\r\n      )\r\n    }\r\n  }\r\n  const fieldsAsArray : [string, Field][] = Object.entries(props.fields);\r\n\r\n  return (\r\n    <Dialog open={props.open} onClose={() => props.onClose(null)} maxWidth=\"sm\" fullWidth>\r\n      <DialogTitle>\r\n        {props.title}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        {fieldsAsArray.map((value, index) => fieldsToInput(value, index))}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => props.onClose(null)} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={() => props.onClose(state)} color=\"primary\">\r\n          Okay\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}