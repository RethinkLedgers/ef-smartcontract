{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bartc\\\\Documents\\\\Github\\\\EF\\\\ef-app\\\\ui\\\\src\\\\pages\\\\retail\\\\InputDialog.tsx\";\nimport React, { useState } from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nexport function InputDialog(props) {\n  const [state, setState] = useState(props.defaultValue);\n\n  function fieldsToInput([fieldName, field], index) {\n    if (field.type === \"selection\") {\n      return /*#__PURE__*/React.createElement(FormControl, {\n        key: index,\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }, field.label), /*#__PURE__*/React.createElement(Select, {\n        value: state[fieldName],\n        defaultValue: \"\",\n        onChange: e => setState({ ...state,\n          [fieldName]: e.target.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      }, field.items.map(item => /*#__PURE__*/React.createElement(MenuItem, {\n        key: item,\n        value: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 39\n        }\n      }, item))));\n    } else {\n      return /*#__PURE__*/React.createElement(TextField, {\n        required: true,\n        autoFocus: true,\n        fullWidth: true,\n        key: index,\n        label: field.label,\n        type: field.type,\n        onChange: e => setState({ ...state,\n          [fieldName]: e.target.value\n        }),\n        InputLabelProps: {\n          shrink: true,\n          required: true\n        },\n        placeholder: field.type === \"date\" ? \"YYYY-MM-DD\" : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      });\n    }\n  }\n\n  const fieldsAsArray = Object.entries(props.fields);\n  return /*#__PURE__*/React.createElement(Dialog, {\n    open: props.open,\n    onClose: () => props.onClose(null),\n    maxWidth: \"sm\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, props.title), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, fieldsAsArray.map((value, index) => fieldsToInput(value, index))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => props.onClose(null),\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => props.onClose(state),\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, \"Okay\")));\n}","map":{"version":3,"sources":["C:/Users/bartc/Documents/Github/EF/ef-app/ui/src/pages/retail/InputDialog.tsx"],"names":["React","useState","Dialog","DialogTitle","DialogContent","DialogActions","Button","TextField","Select","InputLabel","FormControl","MenuItem","InputDialog","props","state","setState","defaultValue","fieldsToInput","fieldName","field","index","type","label","e","target","value","items","map","item","shrink","required","fieldsAsArray","Object","entries","fields","open","onClose","title"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nexport interface RegularField {\r\n  label : string,\r\n  type : \"text\" | \"number\" | \"date\"\r\n}\r\n\r\nexport interface SelectionField {\r\n  label : string,\r\n  type : \"selection\",\r\n  items : string[]\r\n}\r\n\r\nexport type Field = RegularField | SelectionField\r\n\r\nexport interface InputDialogProps<T extends {[key: string]: any }> {\r\n  open : boolean,\r\n  title : string,\r\n  defaultValue : T,\r\n  fields : Record<keyof T, Field>,\r\n  onClose : (state : T | null) => Promise<void>\r\n}\r\n\r\nexport function InputDialog<T extends { [key : string] : any }>(props : InputDialogProps<T>) {\r\n  const [ state, setState ] = useState<T>(props.defaultValue);\r\n\r\n  function fieldsToInput([fieldName, field] : [string, Field], index : number) : JSX.Element {\r\n    if (field.type === \"selection\") {\r\n      return (\r\n        <FormControl key={index} fullWidth>\r\n          <InputLabel required>{field.label}</InputLabel>\r\n          <Select\r\n              value={state[fieldName]}\r\n              defaultValue={\"\"}\r\n              onChange={e => setState({ ...state, [fieldName]: e.target.value })}>\r\n            {field.items.map(item => (<MenuItem key={item} value={item}>{item}</MenuItem>))}\r\n          </Select>\r\n        </FormControl>\r\n      )\r\n    } else {\r\n      return (\r\n        <TextField\r\n          required\r\n          autoFocus\r\n          fullWidth\r\n          key={index}\r\n          label={field.label}\r\n          type={field.type}\r\n          onChange={e => setState({ ...state, [fieldName]: e.target.value })}\r\n          InputLabelProps={{\r\n            shrink:true,\r\n            required:true,\r\n          }}\r\n          placeholder={(field.type===\"date\")?\"YYYY-MM-DD\":\"\"}\r\n        />\r\n      )\r\n    }\r\n  }\r\n  const fieldsAsArray : [string, Field][] = Object.entries(props.fields);\r\n\r\n  return (\r\n    <Dialog open={props.open} onClose={() => props.onClose(null)} maxWidth=\"sm\" fullWidth>\r\n      <DialogTitle>\r\n        {props.title}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        {fieldsAsArray.map((value, index) => fieldsToInput(value, index))}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => props.onClose(null)} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={() => props.onClose(state)} color=\"primary\">\r\n          Okay\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}