{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bartc\\\\Documents\\\\Github\\\\EF\\\\ef-app\\\\ui\\\\src\\\\pages\\\\fundingrequest\\\\FundingRequest.tsx\";\nimport React from \"react\";\nimport { useStreamQueries } from \"@daml/react\";\nimport { EF } from '@daml.js/ef-app/lib';\nimport { InputDialog } from \"./InputDialog\";\nexport default function FundingRequestList() {\n  const assets = useStreamQueries(EF.FundingContractRequest).contracts;\n  const defaultGiveProps = {\n    open: false,\n    title: \"Funding Approval\",\n    defaultValue: {\n      newFundingDate: \"\"\n    },\n    fields: {\n      newFundingDate: {\n        label: \"New Owner\",\n        type: \"date\"\n      }\n    },\n    onClose: async function () {}\n  };\n\n  newFundingDate: Date;\n\n  newDealerCommission: Decimal;\n\n  selectedlessor: Party;\n\n  const [giveProps, setGiveProps] = useState(defaultGiveProps); // One can pass the original contracts CreateEvent\n\n  function showGive(asset) {\n    async function onClose(state) {\n      setGiveProps({ ...defaultGiveProps,\n        open: false\n      }); // if you want to use the contracts payload\n\n      if (!state || asset.payload.owner === state.newOwner) return;\n      await ledger.exercise(Asset.Give, asset.contractId, state);\n    }\n\n    ;\n    setGiveProps({ ...defaultGiveProps,\n      open: true,\n      onClose\n    });\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(InputDialog, Object.assign({}, giveProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(InputDialog, Object.assign({}, appraiseProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Table, {\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    className: classes.tableRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    key: 0,\n    className: classes.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, \"Issuer\"), /*#__PURE__*/React.createElement(TableCell, {\n    key: 1,\n    className: classes.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, \"Owner\"), /*#__PURE__*/React.createElement(TableCell, {\n    key: 2,\n    className: classes.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(TableCell, {\n    key: 5,\n    className: classes.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, \"Give\"), /*#__PURE__*/React.createElement(TableCell, {\n    key: 6,\n    className: classes.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, \"Appraise\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, assets.map(a => /*#__PURE__*/React.createElement(TableRow, {\n    key: a.contractId,\n    className: classes.tableRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    key: 0,\n    className: classes.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, a.payload.issuer), /*#__PURE__*/React.createElement(TableCell, {\n    key: 1,\n    className: classes.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, a.payload.owner), /*#__PURE__*/React.createElement(TableCell, {\n    key: 2,\n    className: classes.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, a.payload.name), /*#__PURE__*/React.createElement(TableCell, {\n    key: 5,\n    className: classes.tableCellButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    size: \"small\",\n    className: classes.choiceButton,\n    variant: \"contained\",\n    disabled: a.payload.owner !== party,\n    onClick: () => showGive(a),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }\n  }, \"Give\")), /*#__PURE__*/React.createElement(TableCell, {\n    key: 6,\n    className: classes.tableCellButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    size: \"small\",\n    className: classes.choiceButton,\n    variant: \"contained\",\n    disabled: a.payload.issuer !== party,\n    onClick: () => showAppraise(a.contractId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 19\n    }\n  }, \"Appraise\")))))));\n}","map":{"version":3,"sources":["C:/Users/bartc/Documents/Github/EF/ef-app/ui/src/pages/fundingrequest/FundingRequest.tsx"],"names":["React","useStreamQueries","EF","InputDialog","FundingRequestList","assets","FundingContractRequest","contracts","defaultGiveProps","open","title","defaultValue","newFundingDate","fields","label","type","onClose","Date","newDealerCommission","Decimal","selectedlessor","Party","giveProps","setGiveProps","useState","showGive","asset","state","payload","owner","newOwner","ledger","exercise","Asset","Give","contractId","appraiseProps","classes","tableRow","tableCell","map","a","issuer","name","tableCellButton","choiceButton","party","showAppraise"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Contracts from \"../../components/Contracts/Contracts\";\r\nimport { useStreamQueries, useQuery } from \"@daml/react\";\r\nimport { Give, FundingApproval  } from \"@daml.js/ef-app/lib/EF\";\r\nimport { EF } from '@daml.js/ef-app/lib';\r\nimport { InputDialog, InputDialogProps } from \"./InputDialog\";\r\nimport useStyles from \"./styles\";\r\n\r\nexport default function FundingRequestList() {\r\n    const assets = useStreamQueries(EF.FundingContractRequest).contracts;\r\n\r\n    const defaultGiveProps : InputDialogProps<FundingApproval> = {\r\n      open: false,\r\n      title: \"Funding Approval\",\r\n      defaultValue: { newFundingDate : \"\" },\r\n      fields: {\r\n        newFundingDate : {\r\n          label: \"New Owner\",\r\n          type: \"date\"\r\n       } },\r\n      onClose: async function() {}\r\n    };\r\n\r\n\r\n    newFundingDate : Date\r\n    newDealerCommission : Decimal\r\n    selectedlessor : Party\r\n  \r\n    const [ giveProps, setGiveProps ] = useState(defaultGiveProps);\r\n    // One can pass the original contracts CreateEvent\r\n    function showGive(asset : Asset.CreateEvent) {\r\n      async function onClose(state : Give | null) {\r\n        setGiveProps({ ...defaultGiveProps, open: false});\r\n        // if you want to use the contracts payload\r\n        if (!state || asset.payload.owner === state.newOwner) return;\r\n        await ledger.exercise(Asset.Give, asset.contractId, state);\r\n      };\r\n      setGiveProps({ ...defaultGiveProps, open: true, onClose})\r\n    };\r\n  \r\n\r\n    return (\r\n      <>\r\n        <InputDialog { ...giveProps } />\r\n        <InputDialog { ...appraiseProps } />\r\n    \r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow className={classes.tableRow}>\r\n              <TableCell key={0} className={classes.tableCell}>Issuer</TableCell>\r\n              <TableCell key={1} className={classes.tableCell}>Owner</TableCell>\r\n              <TableCell key={2} className={classes.tableCell}>Name</TableCell>\r\n              <TableCell key={5} className={classes.tableCell}>Give</TableCell>\r\n              <TableCell key={6} className={classes.tableCell}>Appraise</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {assets.map(a => (\r\n              <TableRow key={a.contractId} className={classes.tableRow}>\r\n                <TableCell key={0} className={classes.tableCell}>{a.payload.issuer}</TableCell>\r\n                <TableCell key={1} className={classes.tableCell}>{a.payload.owner}</TableCell>\r\n                <TableCell key={2} className={classes.tableCell}>{a.payload.name}</TableCell>\r\n                <TableCell key={5} className={classes.tableCellButton}>\r\n                  <Button color=\"primary\" size=\"small\" className={classes.choiceButton} variant=\"contained\" disabled={a.payload.owner !== party} onClick={() => showGive(a)}>Give</Button>\r\n                </TableCell>\r\n                <TableCell key={6} className={classes.tableCellButton}>\r\n                  <Button color=\"primary\" size=\"small\" className={classes.choiceButton} variant=\"contained\" disabled={a.payload.issuer !== party} onClick={() => showAppraise(a.contractId)}>Appraise</Button>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}