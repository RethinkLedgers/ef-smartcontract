{"ast":null,"code":"import * as jwt from \"jsonwebtoken\";\nexport const isLocalDev = process.env.NODE_ENV === 'development';\nlet host = window.location.host.split('.');\nconst applicationId = 'daml-ui-template';\nexport const ledgerId = isLocalDev ? applicationId : host[0];\nlet apiUrl = host.slice(1);\napiUrl.unshift('api');\nexport const httpBaseUrl = isLocalDev ? undefined : 'https://' + apiUrl.join('.') + (window.location.port ? ':' + window.location.port : '') + '/data/' + ledgerId + '/'; // Unfortunately, the development server of `create-react-app` does not proxy\n// websockets properly. Thus, we need to bypass it and talk to the JSON API\n// directly in development mode.\n\nexport const wsBaseUrl = isLocalDev ? 'ws://localhost:7575/' : undefined;\nexport const createToken = party => jwt.sign({\n  \"https://daml.com/ledger-api\": {\n    ledgerId,\n    applicationId,\n    admin: true,\n    actAs: [party],\n    readAs: [party]\n  }\n}, \"secret\");\nlet loginUrl = host.slice(1);\nloginUrl.unshift('login');\nexport const dablLoginUrl = loginUrl.join('.') + (window.location.port ? ':' + window.location.port : '') + '/auth/login?ledgerId=' + ledgerId;\nexport const damlPartyKey = applicationId + \".daml.party\";\nexport const damlTokenKey = applicationId + \".daml.token\";","map":{"version":3,"sources":["C:/Users/bartc/Documents/Github/EF/ef-app/ui/src/config.ts"],"names":["jwt","isLocalDev","process","env","NODE_ENV","host","window","location","split","applicationId","ledgerId","apiUrl","slice","unshift","httpBaseUrl","undefined","join","port","wsBaseUrl","createToken","party","sign","admin","actAs","readAs","loginUrl","dablLoginUrl","damlPartyKey","damlTokenKey"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,cAArB;AAEA,OAAO,MAAMC,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA5C;AAEP,IAAIC,IAAI,GAAGC,MAAM,CAACC,QAAP,CAAgBF,IAAhB,CAAqBG,KAArB,CAA2B,GAA3B,CAAX;AAEA,MAAMC,aAAa,GAAG,kBAAtB;AACA,OAAO,MAAMC,QAAQ,GAAGT,UAAU,GAAGQ,aAAH,GAAmBJ,IAAI,CAAC,CAAD,CAAlD;AAEP,IAAIM,MAAM,GAAGN,IAAI,CAACO,KAAL,CAAW,CAAX,CAAb;AACAD,MAAM,CAACE,OAAP,CAAe,KAAf;AAEA,OAAO,MAAMC,WAAW,GAAGb,UAAU,GAAGc,SAAH,GAAgB,aAAaJ,MAAM,CAACK,IAAP,CAAY,GAAZ,CAAb,IAAiCV,MAAM,CAACC,QAAP,CAAgBU,IAAhB,GAAuB,MAAMX,MAAM,CAACC,QAAP,CAAgBU,IAA7C,GAAoD,EAArF,IAA2F,QAA3F,GAAsGP,QAAtG,GAAiH,GAA/J,C,CAEP;AACA;AACA;;AACA,OAAO,MAAMQ,SAAS,GAAGjB,UAAU,GAAG,sBAAH,GAA4Bc,SAAxD;AAEP,OAAO,MAAMI,WAAW,GAAIC,KAAD,IAAoBpB,GAAG,CAACqB,IAAJ,CAAS;AAAE,iCAA+B;AAAEX,IAAAA,QAAF;AAAYD,IAAAA,aAAZ;AAA2Ba,IAAAA,KAAK,EAAE,IAAlC;AAAwCC,IAAAA,KAAK,EAAE,CAACH,KAAD,CAA/C;AAAwDI,IAAAA,MAAM,EAAE,CAACJ,KAAD;AAAhE;AAAjC,CAAT,EAAuH,QAAvH,CAAxC;AAEP,IAAIK,QAAQ,GAAGpB,IAAI,CAACO,KAAL,CAAW,CAAX,CAAf;AACAa,QAAQ,CAACZ,OAAT,CAAiB,OAAjB;AAEA,OAAO,MAAMa,YAAY,GAAGD,QAAQ,CAACT,IAAT,CAAc,GAAd,KAAsBV,MAAM,CAACC,QAAP,CAAgBU,IAAhB,GAAuB,MAAMX,MAAM,CAACC,QAAP,CAAgBU,IAA7C,GAAoD,EAA1E,IAAgF,uBAAhF,GAA0GP,QAA/H;AAEP,OAAO,MAAMiB,YAAY,GAAGlB,aAAa,GAAG,aAArC;AACP,OAAO,MAAMmB,YAAY,GAAGnB,aAAa,GAAG,aAArC","sourcesContent":["import * as jwt from \"jsonwebtoken\";\n\nexport const isLocalDev = process.env.NODE_ENV === 'development';\n\nlet host = window.location.host.split('.')\n\nconst applicationId = 'daml-ui-template'\nexport const ledgerId = isLocalDev ? applicationId : host[0];\n\nlet apiUrl = host.slice(1)\napiUrl.unshift('api')\n\nexport const httpBaseUrl = isLocalDev ? undefined : ('https://' + apiUrl.join('.') + (window.location.port ? ':' + window.location.port : '') + '/data/' + ledgerId + '/');\n\n// Unfortunately, the development server of `create-react-app` does not proxy\n// websockets properly. Thus, we need to bypass it and talk to the JSON API\n// directly in development mode.\nexport const wsBaseUrl = isLocalDev ? 'ws://localhost:7575/' : undefined;\n\nexport const createToken = (party : string) => jwt.sign({ \"https://daml.com/ledger-api\": { ledgerId, applicationId, admin: true, actAs: [party], readAs: [party] } }, \"secret\")\n\nlet loginUrl = host.slice(1)\nloginUrl.unshift('login')\n\nexport const dablLoginUrl = loginUrl.join('.') + (window.location.port ? ':' + window.location.port : '') + '/auth/login?ledgerId=' + ledgerId;\n\nexport const damlPartyKey = applicationId + \".daml.party\";\nexport const damlTokenKey = applicationId + \".daml.token\";\n"]},"metadata":{},"sourceType":"module"}