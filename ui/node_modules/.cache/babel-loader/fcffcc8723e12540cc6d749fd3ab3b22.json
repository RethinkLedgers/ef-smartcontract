{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\bartc\\\\Documents\\\\Github\\\\EF\\\\ef-app\\\\ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{withRouter}from\"react-router-dom\";import Grid from\"@material-ui/core/Grid\";import CircularProgress from\"@material-ui/core/CircularProgress\";import Typography from\"@material-ui/core/Typography\";import Button from\"@material-ui/core/Button\";import TextField from\"@material-ui/core/TextField\";import Fade from\"@material-ui/core/Fade\";import{useUserDispatch,loginUser,loginDablUser}from\"../../context/UserContext\";import{isLocalDev}from\"../../config\";import useStyles from\"./styles\";import logo from\"./logo.svg\";var Login=function Login(props){var classes=useStyles();var userDispatch=useUserDispatch();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLoading=_useState2[0],setIsLoading=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),loginValue=_useState6[0],setLoginValue=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),passwordValue=_useState8[0],setPasswordValue=_useState8[1];return/*#__PURE__*/React.createElement(Grid,{container:true,className:classes.container},/*#__PURE__*/React.createElement(\"div\",{className:classes.logotypeContainer},/*#__PURE__*/React.createElement(\"img\",{src:logo,alt:\"logo\",className:classes.logotypeImage}),/*#__PURE__*/React.createElement(Typography,{className:classes.logotypeText},\"App Template\")),/*#__PURE__*/React.createElement(\"div\",{className:classes.formContainer},/*#__PURE__*/React.createElement(\"div\",{className:classes.form},/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Fade,{in:error},/*#__PURE__*/React.createElement(Typography,{color:\"secondary\",className:classes.errorMessage},\"Something is wrong with your login or password :(\")),!isLocalDev&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Button,{className:classes.dablLoginButton,variant:\"contained\",color:\"primary\",size:\"large\",onClick:loginDablUser},\"Log in with DABL\"),/*#__PURE__*/React.createElement(Typography,null,\"OR\")),/*#__PURE__*/React.createElement(TextField,{id:\"email\",InputProps:{classes:{underline:classes.textFieldUnderline,input:classes.textField}},value:loginValue,onChange:function onChange(e){return setLoginValue(e.target.value);},onKeyDown:function onKeyDown(e){if(e.key===\"Enter\"){loginUser(userDispatch,loginValue,passwordValue,props.history,setIsLoading,setError);}},margin:\"normal\",placeholder:\"Username\",type:\"email\",fullWidth:true}),/*#__PURE__*/React.createElement(TextField,{id:\"password\",InputProps:{classes:{underline:classes.textFieldUnderline,input:classes.textField}},value:passwordValue,onChange:function onChange(e){return setPasswordValue(e.target.value);},onKeyDown:function onKeyDown(e){if(e.key===\"Enter\"){loginUser(userDispatch,loginValue,passwordValue,props.history,setIsLoading,setError);}},margin:\"normal\",placeholder:\"Password\",type:\"password\",fullWidth:true}),/*#__PURE__*/React.createElement(\"div\",{className:classes.formButtons},isLoading?/*#__PURE__*/React.createElement(CircularProgress,{size:26,className:classes.loginLoader}):/*#__PURE__*/React.createElement(Button,{disabled:loginValue.length===0,onClick:function onClick(){return loginUser(userDispatch,loginValue,passwordValue,props.history,setIsLoading,setError);},variant:\"contained\",color:\"primary\",size:\"large\"},\"Login\"))))));};export default withRouter(Login);","map":{"version":3,"sources":["C:/Users/bartc/Documents/Github/EF/ef-app/ui/src/pages/login/Login.tsx"],"names":["React","useState","withRouter","Grid","CircularProgress","Typography","Button","TextField","Fade","useUserDispatch","loginUser","loginDablUser","isLocalDev","useStyles","Login","props","classes","userDispatch","isLoading","setIsLoading","error","setError","loginValue","setLoginValue","passwordValue","setPasswordValue","container","logotypeContainer","logo","logotypeImage","logotypeText","formContainer","form","errorMessage","dablLoginButton","underline","textFieldUnderline","input","textField","e","target","value","key","history","formButtons","loginLoader","length"],"mappings":"+KAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,UAAT,KAAgD,kBAAhD,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oCAA7B,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,OAASC,eAAT,CAA0BC,SAA1B,CAAqCC,aAArC,KAA0D,2BAA1D,CACA,OAASC,UAAT,KAA2B,cAA3B,CACA,MAAOC,CAAAA,SAAP,KAAsB,UAAtB,C,6BAGA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAiC,CAC7C,GAAIC,CAAAA,OAAO,CAAGH,SAAS,EAAvB,CACA,GAAII,CAAAA,YAAY,CAAGR,eAAe,EAAlC,CAF6C,cAGbR,QAAQ,CAAC,KAAD,CAHK,wCAGxCiB,SAHwC,eAG7BC,YAH6B,8BAIrBlB,QAAQ,CAAC,KAAD,CAJa,yCAIxCmB,KAJwC,eAIjCC,QAJiC,8BAKXpB,QAAQ,CAAC,EAAD,CALG,yCAKxCqB,UALwC,eAK5BC,aAL4B,8BAMLtB,QAAQ,CAAC,EAAD,CANH,yCAMxCuB,aANwC,eAMzBC,gBANyB,eAQ7C,mBACE,oBAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,SAAS,CAAET,OAAO,CAACU,SAAnC,eACE,2BAAK,SAAS,CAAEV,OAAO,CAACW,iBAAxB,eACE,2BAAK,GAAG,CAAEC,IAAV,CAAgB,GAAG,CAAC,MAApB,CAA2B,SAAS,CAAEZ,OAAO,CAACa,aAA9C,EADF,cAEE,oBAAC,UAAD,EAAY,SAAS,CAAEb,OAAO,CAACc,YAA/B,iBAFF,CADF,cAKE,2BAAK,SAAS,CAAEd,OAAO,CAACe,aAAxB,eACE,2BAAK,SAAS,CAAEf,OAAO,CAACgB,IAAxB,eACI,oBAAC,KAAD,CAAO,QAAP,mBACE,oBAAC,IAAD,EAAM,EAAE,CAAEZ,KAAV,eACE,oBAAC,UAAD,EAAY,KAAK,CAAC,WAAlB,CAA8B,SAAS,CAAEJ,OAAO,CAACiB,YAAjD,sDADF,CADF,CAMG,CAACrB,UAAD,eACC,qDACE,oBAAC,MAAD,EAAQ,SAAS,CAAEI,OAAO,CAACkB,eAA3B,CAA4C,OAAO,CAAC,WAApD,CAAgE,KAAK,CAAC,SAAtE,CAAgF,IAAI,CAAC,OAArF,CAA6F,OAAO,CAAEvB,aAAtG,qBADF,cAIE,oBAAC,UAAD,WAJF,CAPJ,cAeE,oBAAC,SAAD,EACE,EAAE,CAAC,OADL,CAEE,UAAU,CAAE,CACVK,OAAO,CAAE,CACPmB,SAAS,CAAEnB,OAAO,CAACoB,kBADZ,CAEPC,KAAK,CAAErB,OAAO,CAACsB,SAFR,CADC,CAFd,CAQE,KAAK,CAAEhB,UART,CASE,QAAQ,CAAE,kBAAAiB,CAAC,QAAIhB,CAAAA,aAAa,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB,EATb,CAUE,SAAS,CAAE,mBAAAF,CAAC,CAAI,CACd,GAAIA,CAAC,CAACG,GAAF,GAAU,OAAd,CAAuB,CACrBhC,SAAS,CACPO,YADO,CAEPK,UAFO,CAGPE,aAHO,CAIPT,KAAK,CAAC4B,OAJC,CAKPxB,YALO,CAMPE,QANO,CAAT,CAQD,CACF,CArBH,CAsBE,MAAM,CAAC,QAtBT,CAuBE,WAAW,CAAC,UAvBd,CAwBE,IAAI,CAAC,OAxBP,CAyBE,SAAS,KAzBX,EAfF,cA0CE,oBAAC,SAAD,EACE,EAAE,CAAC,UADL,CAEE,UAAU,CAAE,CACVL,OAAO,CAAE,CACPmB,SAAS,CAAEnB,OAAO,CAACoB,kBADZ,CAEPC,KAAK,CAAErB,OAAO,CAACsB,SAFR,CADC,CAFd,CAQE,KAAK,CAAEd,aART,CASE,QAAQ,CAAE,kBAAAe,CAAC,QAAId,CAAAA,gBAAgB,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV,CAApB,EATb,CAUE,SAAS,CAAE,mBAAAF,CAAC,CAAI,CACd,GAAIA,CAAC,CAACG,GAAF,GAAU,OAAd,CAAuB,CACrBhC,SAAS,CACPO,YADO,CAEPK,UAFO,CAGPE,aAHO,CAIPT,KAAK,CAAC4B,OAJC,CAKPxB,YALO,CAMPE,QANO,CAAT,CAQD,CACF,CArBH,CAsBE,MAAM,CAAC,QAtBT,CAuBE,WAAW,CAAC,UAvBd,CAwBE,IAAI,CAAC,UAxBP,CAyBE,SAAS,KAzBX,EA1CF,cAqEE,2BAAK,SAAS,CAAEL,OAAO,CAAC4B,WAAxB,EACG1B,SAAS,cACR,oBAAC,gBAAD,EAAkB,IAAI,CAAE,EAAxB,CAA4B,SAAS,CAAEF,OAAO,CAAC6B,WAA/C,EADQ,cAER,oBAAC,MAAD,EACE,QAAQ,CAAEvB,UAAU,CAACwB,MAAX,GAAsB,CADlC,CAEE,OAAO,CAAE,yBACPpC,CAAAA,SAAS,CACPO,YADO,CAEPK,UAFO,CAGPE,aAHO,CAIPT,KAAK,CAAC4B,OAJC,CAKPxB,YALO,CAMPE,QANO,CADF,EAFX,CAYE,OAAO,CAAC,WAZV,CAaE,KAAK,CAAC,SAbR,CAcE,IAAI,CAAC,OAdP,UAHJ,CArEF,CADJ,CADF,CALF,CADF,CAwGD,CAhHD,CAkHA,cAAenB,CAAAA,UAAU,CAACY,KAAD,CAAzB","sourcesContent":["import React, { useState } from \"react\";\r\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport { useUserDispatch, loginUser, loginDablUser } from \"../../context/UserContext\";\r\nimport { isLocalDev } from \"../../config\";\r\nimport useStyles from \"./styles\";\r\nimport logo from \"./logo.svg\";\r\n\r\nconst Login = (props : RouteComponentProps) => {\r\n  var classes = useStyles();\r\n  var userDispatch = useUserDispatch();\r\n  var [isLoading, setIsLoading] = useState(false);\r\n  var [error, setError] = useState(false);\r\n  var [loginValue, setLoginValue] = useState(\"\");\r\n  var [passwordValue, setPasswordValue] = useState(\"\");\r\n\r\n  return (\r\n    <Grid container className={classes.container}>\r\n      <div className={classes.logotypeContainer}>\r\n        <img src={logo} alt=\"logo\" className={classes.logotypeImage} />\r\n        <Typography className={classes.logotypeText}>App Template</Typography>\r\n      </div>\r\n      <div className={classes.formContainer}>\r\n        <div className={classes.form}>\r\n            <React.Fragment>\r\n              <Fade in={error}>\r\n                <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                  Something is wrong with your login or password :(\r\n                </Typography>\r\n              </Fade>\r\n              {!isLocalDev &&\r\n                <>\r\n                  <Button className={classes.dablLoginButton} variant=\"contained\" color=\"primary\" size=\"large\" onClick={loginDablUser}>\r\n                    Log in with DABL\r\n                  </Button>\r\n                  <Typography>\r\n                    OR\r\n                  </Typography>\r\n                </>}\r\n              <TextField\r\n                id=\"email\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={loginValue}\r\n                onChange={e => setLoginValue(e.target.value)}\r\n                onKeyDown={e => {\r\n                  if (e.key === \"Enter\") {\r\n                    loginUser(\r\n                      userDispatch,\r\n                      loginValue,\r\n                      passwordValue,\r\n                      props.history,\r\n                      setIsLoading,\r\n                      setError,\r\n                    )\r\n                  }\r\n                }}\r\n                margin=\"normal\"\r\n                placeholder=\"Username\"\r\n                type=\"email\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"password\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={passwordValue}\r\n                onChange={e => setPasswordValue(e.target.value)}\r\n                onKeyDown={e => {\r\n                  if (e.key === \"Enter\") {\r\n                    loginUser(\r\n                      userDispatch,\r\n                      loginValue,\r\n                      passwordValue,\r\n                      props.history,\r\n                      setIsLoading,\r\n                      setError,\r\n                    )\r\n                  }\r\n                }}\r\n                margin=\"normal\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                fullWidth\r\n              />\r\n              <div className={classes.formButtons}>\r\n                {isLoading ?\r\n                  <CircularProgress size={26} className={classes.loginLoader} />\r\n                : <Button\r\n                    disabled={loginValue.length === 0}\r\n                    onClick={() =>\r\n                      loginUser(\r\n                        userDispatch,\r\n                        loginValue,\r\n                        passwordValue,\r\n                        props.history,\r\n                        setIsLoading,\r\n                        setError,\r\n                      )\r\n                    }\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                  >\r\n                    Login\r\n                  </Button>}\r\n              </div>\r\n            </React.Fragment>\r\n        </div>\r\n      </div>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default withRouter(Login);"]},"metadata":{},"sourceType":"module"}