{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bartc\\\\Documents\\\\Github\\\\EF\\\\ef-app\\\\ui\\\\src\\\\pages\\\\fundingrequest\\\\FundingRequest.tsx\";\nimport React, { useState } from \"react\";\nimport { useStreamQueries } from \"@daml/react\";\nimport { EF } from '@daml.js/ef-app/lib';\nimport { InputDialog } from \"./InputDialog\";\nexport default function FundingRequestList() {\n  const assets = useStreamQueries(EF.FundingContractRequest).contracts;\n  const defaultApprovalProps = {\n    open: false,\n    title: \"Funding Approval\",\n    defaultValue: {\n      newFundingDate: \"\",\n      newDealerCommission: \"\",\n      selectedlessor: \"\"\n    },\n    fields: {\n      newFundingDate: {\n        label: \"New Owner\",\n        type: \"date\"\n      },\n      newDealerCommission: {\n        label: \"Dealer Commision\",\n        type: \"number\"\n      },\n      selectedlessor: {\n        label: \"Lessor\",\n        type: \"text\"\n      }\n    },\n    onClose: async function () {}\n  };\n  const [approvalProps, setApprovalProps] = useState(defaultApprovalProps); // One can pass the original contracts CreateEvent\n\n  function showApproval(asset) {\n    async function onClose(state) {\n      setApprovalProps({ ...defaultApprovalProps,\n        open: false\n      }); // if you want to use the contracts payload\n\n      if (!state || asset.payload.owner === state.newOwner) return;\n      await ledger.exercise(EF.FundingContractRequest.FundingApproval, asset.contractId, state);\n    }\n\n    ;\n    setApprovalProps({ ...defaultApprovalProps,\n      open: true,\n      onClose\n    });\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(InputDialog, Object.assign({}, approvalProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Table, {\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    className: classes.tableRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    key: 0,\n    className: classes.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, \"Originator\"), /*#__PURE__*/React.createElement(TableCell, {\n    key: 1,\n    className: classes.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, \"Owner\"), /*#__PURE__*/React.createElement(TableCell, {\n    key: 2,\n    className: classes.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(TableCell, {\n    key: 5,\n    className: classes.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, \"Approval\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, assets.map(a => /*#__PURE__*/React.createElement(TableRow, {\n    key: a.contractId,\n    className: classes.tableRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    key: 0,\n    className: classes.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, a.payload.originator), /*#__PURE__*/React.createElement(TableCell, {\n    key: 1,\n    className: classes.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, a.payload.owner), /*#__PURE__*/React.createElement(TableCell, {\n    key: 2,\n    className: classes.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, a.payload.name), /*#__PURE__*/React.createElement(TableCell, {\n    key: 5,\n    className: classes.tableCellButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    size: \"small\",\n    className: classes.choiceButton,\n    variant: \"contained\",\n    disabled: a.payload.owner !== party,\n    onClick: () => showApproval(a),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 19\n    }\n  }, \"Approval\")))))));\n}","map":{"version":3,"sources":["C:/Users/bartc/Documents/Github/EF/ef-app/ui/src/pages/fundingrequest/FundingRequest.tsx"],"names":["React","useState","useStreamQueries","EF","InputDialog","FundingRequestList","assets","FundingContractRequest","contracts","defaultApprovalProps","open","title","defaultValue","newFundingDate","newDealerCommission","selectedlessor","fields","label","type","onClose","approvalProps","setApprovalProps","showApproval","asset","state","payload","owner","newOwner","ledger","exercise","FundingApproval","contractId","classes","tableRow","tableCell","map","a","originator","name","tableCellButton","choiceButton","party"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useStreamQueries, useQuery } from \"@daml/react\";\r\nimport { Give, FundingApproval  } from \"@daml.js/ef-app/lib/EF\";\r\nimport { EF } from '@daml.js/ef-app/lib';\r\nimport { InputDialog, InputDialogProps } from \"./InputDialog\";\r\nimport useStyles from \"./styles\";\r\n\r\nexport default function FundingRequestList() {\r\n    const assets = useStreamQueries(EF.FundingContractRequest).contracts;\r\n\r\n    const defaultApprovalProps : InputDialogProps<FundingApproval> = {\r\n      open: false,\r\n      title: \"Funding Approval\",\r\n      defaultValue: { newFundingDate : \"\" ,  newDealerCommission: \"\",  selectedlessor: \"\" },\r\n      fields: {\r\n        newFundingDate : {\r\n          label: \"New Owner\",\r\n          type: \"date\"\r\n        },\r\n        newDealerCommission : {\r\n          label: \"Dealer Commision\",\r\n          type: \"number\"\r\n        },\r\n        selectedlessor : {\r\n          label: \"Lessor\",\r\n          type: \"text\"\r\n        },\r\n      \r\n      \r\n      },\r\n      onClose: async function() {}\r\n    };\r\n\r\n  \r\n    const [ approvalProps, setApprovalProps ] = useState(defaultApprovalProps);\r\n    // One can pass the original contracts CreateEvent\r\n    function showApproval(asset : Asset.CreateEvent) {\r\n      async function onClose(state : FundingApproval | null) {\r\n        setApprovalProps({ ...defaultApprovalProps, open: false});\r\n        // if you want to use the contracts payload\r\n        if (!state || asset.payload.owner === state.newOwner) return;\r\n        await ledger.exercise(EF.FundingContractRequest.FundingApproval, asset.contractId, state);\r\n      };\r\n      setApprovalProps({ ...defaultApprovalProps, open: true, onClose})\r\n    };\r\n  \r\n\r\n    return (\r\n      <>\r\n        <InputDialog { ...approvalProps } />\r\n    \r\n    \r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow className={classes.tableRow}>\r\n              <TableCell key={0} className={classes.tableCell}>Originator</TableCell>\r\n              <TableCell key={1} className={classes.tableCell}>Owner</TableCell>\r\n              <TableCell key={2} className={classes.tableCell}>Name</TableCell>\r\n              <TableCell key={5} className={classes.tableCell}>Approval</TableCell>\r\n           \r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {assets.map(a => (\r\n              <TableRow key={a.contractId} className={classes.tableRow}>\r\n                <TableCell key={0} className={classes.tableCell}>{a.payload.originator}</TableCell>\r\n                <TableCell key={1} className={classes.tableCell}>{a.payload.owner}</TableCell>\r\n                <TableCell key={2} className={classes.tableCell}>{a.payload.name}</TableCell>\r\n                <TableCell key={5} className={classes.tableCellButton}>\r\n                  <Button color=\"primary\" size=\"small\" className={classes.choiceButton} variant=\"contained\" disabled={a.payload.owner !== party} onClick={() => showApproval(a)}>Approval</Button>\r\n                </TableCell>\r\n\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}